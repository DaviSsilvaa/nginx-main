worker_processes auto;
events {
    worker_connections 1024;
}

http {
    # Configuração do servidor 1
    server {
        listen 80;                             # Porta do servidor
        server_name example1.com;              # Nome do servidor 1

        location / {
            root html/example1;                # Diretório onde os arquivos estão localizados
            index index.html index.htm;        # Página inicial
        }

        error_page 404 /404.html;              # Página de erro 404
        location = /404.html {
            internal;                           # Define como interno
        }
    }

    # Configuração do servidor 2
    server {
        listen 80;                             # Porta do servidor
        server_name example2.com;              # Nome do servidor 2

        location / {
            root html/example2;                # Diretório para os arquivos do segundo servidor
            index index.html index.htm;        # Página inicial
        }

        error_page 404 /404.html;              # Página de erro 404
        location = /404.html {
            internal;                           # Define como interno
        }
    }

    # Configuração do servidor de balanceamento de carga
    upstream backend {
        server backend1.example.com;           # Servidor backend 1
        server backend2.example.com;           # Servidor backend 2
    }

    server {
        listen 80;                             # Porta do balanceador de carga
        server_name loadbalancer.example.com;  # Nome do servidor de balanceamento

        location / {
            proxy_pass http://backend;         # Direciona as requisições para o grupo "backend"
            proxy_set_header Host $host;       # Passa o cabeçalho Host
            proxy_set_header X-Real-IP $remote_addr;  # Passa o IP real do cliente
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Cabeçalho para rastreamento
            proxy_set_header X-Forwarded-Proto $scheme; # Protocolo original
        }
    }
}
